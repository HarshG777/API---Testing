{
	"info": {
		"_postman_id": "c4d1d9d7-4eb1-41c4-845c-b76de7762d1e",
		"name": "Simple Grocery Store API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33484279",
		"_collection_link": "https://winter-capsule-248437.postman.co/workspace/New-Team-Workspace~780958f6-c9a5-479a-b56a-5b107d880b14/collection/33484279-c4d1d9d7-4eb1-41c4-845c-b76de7762d1e?action=share&source=collection_link&creator=33484279"
	},
	"item": [
		{
			"name": "Happy Testing",
			"item": []
		},
		{
			"name": "Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var response = pm.response.json();\r",
							"\r",
							"console.log(response.status);\r",
							"\r",
							"\r",
							"pm.test(\"Check the status\",()=>{\r",
							"    pm.expect(response).to.be.an('object');\r",
							"    pm.expect(response.status).to.be.a('string')\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/status",
					"host": [
						"{{URL}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `\r",
							"<style type=\"text/css\">\r",
							"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
							"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
							"    .tftable tr {background-color:#ffffff;}\r",
							"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
							"    .tftable tr:hover {background-color:#e0ffff;}\r",
							"</style>\r",
							"\r",
							"<table class=\"tftable\" border=\"1\">\r",
							"    <tr>\r",
							"        <th>ID</th>\r",
							"        <th>Category</th>\r",
							"        <th>Name</th>\r",
							"        <th>In Stock</th>\r",
							"    </tr>\r",
							"    {{#each response}}\r",
							"    <tr>\r",
							"        <td>{{id}}</td>\r",
							"        <td>{{category}}</td>\r",
							"        <td>{{name}}</td>\r",
							"        <td>{{inStock}}</td>\r",
							"    </tr>\r",
							"    {{/each}}\r",
							"</table>\r",
							"`;\r",
							"\r",
							"function constructVisualizerPayload() {\r",
							"    return { response: pm.response.json() }\r",
							"}\r",
							"\r",
							"pm.visualizer.set(template, constructVisualizerPayload());\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"//Strat form here---------------------------\r",
							"const response = pm.response.json();\r",
							"console.log(response[0].inStock)\r",
							"\r",
							"pm.test(\"Inside the array\",()=>{\r",
							"\r",
							"    pm.expect(response).to.be.an('array')\r",
							"    pm.expect(response.length).to.be.above(0);\r",
							"\r",
							"\r",
							"    const proid = response[0];\r",
							"    pm.expect(proid).to.be.an('object');\r",
							"    pm.expect(proid).to.haveOwnProperty('id');\r",
							"    pm.expect(proid.id).to.be.a('number');\r",
							"    pm.expect(proid.inStock).to.be.true;\r",
							"    pm.expect(proid.inStock).to.be.a('boolean');\r",
							"\r",
							"\r",
							"    pm.collectionVariables.set(\"ProductionId\",proid.id)\r",
							"\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/products/",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products",
						""
					],
					"query": [
						{
							"key": "category",
							"value": "coffee",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"chek\",()=>{\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response.created).to.be.true;\r",
							"})\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.collectionVariables.set(\"cartId\",response.cartId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{URL}}/carts",
					"host": [
						"{{URL}}"
					],
					"path": [
						"carts"
					]
				}
			},
			"response": []
		},
		{
			"name": "get cartID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/carts/{{cartId}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"carts",
						"{{cartId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Item",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/carts/{{cartId}}/items",
					"host": [
						"{{URL}}"
					],
					"path": [
						"carts",
						"{{cartId}}",
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add item to Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check includes\",()=>{\r",
							"    const response = pm.response.json();\r",
							"\r",
							"    pm.expect(response.itemId).to.be.include(3580)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"productId\": 4643,\r\n   \"quantity\" : 5\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/carts/{{cartId}}/items/",
					"host": [
						"{{URL}}"
					],
					"path": [
						"carts",
						"{{cartId}}",
						"items",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "API Authentication",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"clientName\": \"Postman on Valentin's computer\",\r\n   \"clientEmail\": \"{{$randomEmail}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api-clients",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api-clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "create an Order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Grocery_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"customerName\": \"Harsh Gaikwad\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/orders",
					"host": [
						"{{URL}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Orders",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Grocery_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/orders",
					"host": [
						"{{URL}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Grocery_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/orders/{{orderID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"orders",
						"{{orderID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Grocery_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"customerName\":\"{{$randomFullName}}\",\r\n    \"comment\":\"{{$randomStreetAddress}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/orders/{{orderID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"orders",
						"{{orderID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Replace a item",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"productId\": 3674\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/carts/{{cartId}}/items/:itemId",
					"host": [
						"{{URL}}"
					],
					"path": [
						"carts",
						"{{cartId}}",
						"items",
						":itemId"
					],
					"variable": [
						{
							"key": "itemId",
							"value": "309756490"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete item",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"productId\": 3674\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/carts/{{cartId}}/items/:itemId",
					"host": [
						"{{URL}}"
					],
					"path": [
						"carts",
						"{{cartId}}",
						"items",
						":itemId"
					],
					"variable": [
						{
							"key": "itemId",
							"value": "309756490"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Grocery_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/orders/{{orderID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"orders",
						"{{orderID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get SIngle Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Correct Product\",()=>{\r",
							"    const prodectID = pm.collectionVariables.get(\"ProductionId\");\r",
							"\r",
							"    console.log(prodectID)\r",
							"    const response = pm.response.json()\r",
							"    pm.expect()\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/products/{{ProductionId}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"products",
						"{{ProductionId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "https://simple-grocery-store-api.glitch.me"
		},
		{
			"key": "cartId",
			"value": "XD5mN5jD3gJkocFs5e3-I",
			"type": "string"
		},
		{
			"key": "ProductionId",
			"value": ""
		}
	]
}